"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8269],{28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var r=o(96540);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},88880:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"recipes/connecting-to-gcp","title":"Connecting to GCP","description":"Connect Google Cloud Platform services with ToolJump including Compute Engine, Cloud Functions, and other GCP resources for enhanced developer productivity.","source":"@site/docs/recipes/connecting-to-gcp.md","sourceDirName":"recipes","slug":"/recipes/connecting-to-gcp","permalink":"/docs/recipes/connecting-to-gcp","draft":false,"unlisted":false,"editUrl":"https://github.com/tooljump/tooljump/tree/main/docs/docs/recipes/connecting-to-gcp.md","tags":[],"version":"current","frontMatter":{"id":"connecting-to-gcp","title":"Connecting to GCP","keywords":["connecting to gcp","google cloud platform","gcp integration","cloud integration","tooljump gcp"],"description":"Connect Google Cloud Platform services with ToolJump including Compute Engine, Cloud Functions, and other GCP resources for enhanced developer productivity."},"sidebar":"docsSidebar","previous":{"title":"Connecting to AWS","permalink":"/docs/recipes/connecting-to-aws"},"next":{"title":"Connecting to Azure","permalink":"/docs/recipes/connecting-to-azure"}}');var t=o(74848),i=o(28453);const s={id:"connecting-to-gcp",title:"Connecting to GCP",keywords:["connecting to gcp","google cloud platform","gcp integration","cloud integration","tooljump gcp"],description:"Connect Google Cloud Platform services with ToolJump including Compute Engine, Cloud Functions, and other GCP resources for enhanced developer productivity."},c="Connecting to GCP",l={},a=[{value:"Correlating other tools with GCP",id:"correlating-other-tools-with-gcp",level:2},{value:"Authenticating to GCP",id:"authenticating-to-gcp",level:2},{value:"Option 1: Give ToolJump access to the resources you need",id:"option-1-give-tooljump-access-to-the-resources-you-need",level:3},{value:"How It Works",id:"how-it-works",level:4},{value:"Benefits",id:"benefits",level:4},{value:"Example: Accessing Cloud Storage with ADC (Node.js)",id:"example-accessing-cloud-storage-with-adc-nodejs",level:4},{value:"Option 2: Cross\u2011project IAM or Service Account Impersonation",id:"option-2-crossproject-iam-or-service-account-impersonation",level:3},{value:"How It Works",id:"how-it-works-1",level:4},{value:"Benefits",id:"benefits-1",level:4},{value:"Example: IAM Binding on Target Bucket (direct access)",id:"example-iam-binding-on-target-bucket-direct-access",level:5},{value:"Example: Allow Impersonation of a Target Service Account",id:"example-allow-impersonation-of-a-target-service-account",level:5},{value:"Example: Caller Code (Node.js, ADC)",id:"example-caller-code-nodejs-adc",level:5},{value:"Option 3: Service Account Key (JSON file)",id:"option-3-service-account-key-json-file",level:3},{value:"How It Works",id:"how-it-works-2",level:4},{value:"Risks",id:"risks",level:4},{value:"Hardening Measures",id:"hardening-measures",level:4},{value:"Example: Usage in Node.js (JSON key)",id:"example-usage-in-nodejs-json-key",level:4},{value:"Using the GCP SDK to retrieve data from GCP",id:"using-the-gcp-sdk-to-retrieve-data-from-gcp",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"connecting-to-gcp",children:"Connecting to GCP"})}),"\n",(0,t.jsx)(n.p,{children:"Google Cloud Platform (GCP) is a scalable, on\u2011demand cloud computing platform."}),"\n",(0,t.jsx)(n.h2,{id:"correlating-other-tools-with-gcp",children:"Correlating other tools with GCP"}),"\n",(0,t.jsxs)(n.p,{children:["Suggested reading: ",(0,t.jsx)(n.a,{href:"../connecting-your-tools-resources",children:"Best practices for uniformly tagging and correlating resources across your organization"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"In order to best leverage GCP, your infrastructure and other tools must be properly labeled so that they can be easily found in GCP."}),"\n",(0,t.jsxs)(n.p,{children:['For example, any infrastructure for the "webshop" service should be labeled with ',(0,t.jsx)(n.code,{children:"service=webshop"})," and ",(0,t.jsx)(n.code,{children:"repository=company/webshop"})," so you can easily identify them."]}),"\n",(0,t.jsx)(n.h2,{id:"authenticating-to-gcp",children:"Authenticating to GCP"}),"\n",(0,t.jsx)(n.p,{children:"Depending on your situation, there are a number of approaches you can use, all with pros and cons. Carefully review the options below and choose the one that best fits your scenario:"}),"\n",(0,t.jsx)(n.h3,{id:"option-1-give-tooljump-access-to-the-resources-you-need",children:"Option 1: Give ToolJump access to the resources you need"}),"\n",(0,t.jsx)(n.p,{children:"Use this if:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 ToolJump runs in GCP and all resources you are interested in are in the same project"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When your service runs ",(0,t.jsx)(n.strong,{children:"inside GCP"})," (Compute Engine, Cloud Run, Cloud Functions, GKE), you don\u2019t need any long\u2011lived keys.",(0,t.jsx)(n.br,{}),"\n","Instead, you attach a ",(0,t.jsx)(n.strong,{children:"service account"})," to the compute resource, and the GCP environment automatically provides ",(0,t.jsx)(n.strong,{children:"short\u2011lived credentials"})," to the application via the metadata server.",(0,t.jsx)(n.br,{}),"\n","Google client libraries then use ",(0,t.jsx)(n.strong,{children:"Application Default Credentials (ADC)"})," to obtain and refresh these credentials automatically."]}),"\n",(0,t.jsx)(n.h4,{id:"how-it-works",children:"How It Works"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Compute Engine (GCE)"}),": attach a ",(0,t.jsx)(n.strong,{children:"service account"})," to the VM and grant only the required IAM roles."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cloud Run / Cloud Functions"}),": configure the ",(0,t.jsx)(n.strong,{children:"service account"})," the service runs as."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GKE"}),": use ",(0,t.jsx)(n.strong,{children:"Workload Identity"})," to bind a Kubernetes service account to a Google service account with the needed roles."]}),"\n",(0,t.jsxs)(n.li,{children:["Client libraries automatically use ",(0,t.jsx)(n.strong,{children:"ADC"})," (no explicit credentials in code)."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"benefits",children:"Benefits"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No long\u2011lived keys."}),"\n",(0,t.jsx)(n.li,{children:"Automatic rotation of temporary credentials."}),"\n",(0,t.jsx)(n.li,{children:"Least\u2011privilege access (scoped IAM roles)."}),"\n",(0,t.jsx)(n.li,{children:"Easy to revoke by changing the service account or roles."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"example-accessing-cloud-storage-with-adc-nodejs",children:"Example: Accessing Cloud Storage with ADC (Node.js)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { Storage } from "@google-cloud/storage";\n\nconst storage = new Storage(); // Uses ADC from the environment\n\nconst [files] = await storage.bucket("my-bucket").getFiles({ prefix: "read-prefix/" });\nconsole.log(files.map(f => f.name));\n'})}),"\n",(0,t.jsx)(n.h3,{id:"option-2-crossproject-iam-or-service-account-impersonation",children:"Option 2: Cross\u2011project IAM or Service Account Impersonation"}),"\n",(0,t.jsx)(n.p,{children:"Use this option if all the following are true:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 You have multiple GCP projects"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 ToolJump runs in one project but needs to read from another project"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When your service runs in ",(0,t.jsx)(n.strong,{children:"another GCP project"})," (e.g., same organization, vendor project, or partner project), you can grant it access without creating long\u2011lived keys.",(0,t.jsx)(n.br,{}),"\n","You can do this by either granting the running service account direct IAM access on the target resources, or by allowing it to ",(0,t.jsx)(n.strong,{children:"impersonate"})," a service account in the target project."]}),"\n",(0,t.jsx)(n.h4,{id:"how-it-works-1",children:"How It Works"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["In the ",(0,t.jsx)(n.strong,{children:"target project"})," (that ToolJump needs to read from):","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Option A (direct): Grant your caller service account the minimal IAM roles on the target resources (e.g., Storage Object Viewer on a bucket)."}),"\n",(0,t.jsxs)(n.li,{children:["Option B (impersonation): Create or choose a ",(0,t.jsx)(n.strong,{children:"target service account"})," with the minimal roles needed on the resources. Grant the caller service account ",(0,t.jsx)(n.code,{children:"roles/iam.serviceAccountTokenCreator"})," on this target service account."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["In the ",(0,t.jsx)(n.strong,{children:"caller project"})," (where ToolJump runs):","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The application uses ADC for its own service account."}),"\n",(0,t.jsx)(n.li,{children:"If using impersonation, it requests short\u2011lived credentials to act as the target service account and uses those credentials for API calls."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"benefits-1",children:"Benefits"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No long\u2011lived keys."}),"\n",(0,t.jsx)(n.li,{children:"Short\u2011lived credentials (time\u2011boxed sessions)."}),"\n",(0,t.jsx)(n.li,{children:"Easy to revoke by removing IAM bindings."}),"\n",(0,t.jsx)(n.li,{children:"Least\u2011privilege access with fine\u2011grained roles."}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"example-iam-binding-on-target-bucket-direct-access",children:"Example: IAM Binding on Target Bucket (direct access)"}),"\n",(0,t.jsx)(n.p,{children:"Grant the ToolJump service account viewer access to a bucket in the target project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "bindings": [\n    {\n      "role": "roles/storage.objectViewer",\n      "members": [\n        "serviceAccount:tooljump-sa@caller-project.iam.gserviceaccount.com"\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h5,{id:"example-allow-impersonation-of-a-target-service-account",children:"Example: Allow Impersonation of a Target Service Account"}),"\n",(0,t.jsx)(n.p,{children:"Grant the caller service account permission to impersonate the target service account:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "bindings": [\n    {\n      "role": "roles/iam.serviceAccountTokenCreator",\n      "members": [\n        "serviceAccount:tooljump-sa@caller-project.iam.gserviceaccount.com"\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Then the application can use ADC to obtain short\u2011lived credentials for the target service account and call APIs with those credentials."}),"\n",(0,t.jsx)(n.h5,{id:"example-caller-code-nodejs-adc",children:"Example: Caller Code (Node.js, ADC)"}),"\n",(0,t.jsx)(n.p,{children:"When using direct IAM on the resources, no code changes are required beyond standard ADC usage:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { Storage } from "@google-cloud/storage";\n\nconst storage = new Storage(); // ADC (service account in caller project)\n\nconst [files] = await storage.bucket("my-bucket").getFiles({ prefix: "read-prefix/" });\nconsole.log(files.map(f => f.name));\n'})}),"\n",(0,t.jsx)(n.h3,{id:"option-3-service-account-key-json-file",children:"Option 3: Service Account Key (JSON file)"}),"\n",(0,t.jsxs)(n.p,{children:["If none of the role\u2011based solutions are possible, you can create a ",(0,t.jsx)(n.strong,{children:"service account key"})," (JSON) and use it as fixed credentials.",(0,t.jsx)(n.br,{}),"\n","This approach should only be used as a ",(0,t.jsx)(n.strong,{children:"last resort"}),", because long\u2011lived keys are hard to rotate and carry higher security risks."]}),"\n",(0,t.jsx)(n.h4,{id:"how-it-works-2",children:"How It Works"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create a service account with the minimal roles needed."}),"\n",(0,t.jsxs)(n.li,{children:["Generate a ",(0,t.jsx)(n.strong,{children:"key (JSON)"})," for that service account."]}),"\n",(0,t.jsx)(n.li,{children:"Store it securely (e.g., in a secrets manager or vault)."}),"\n",(0,t.jsxs)(n.li,{children:["The backend service sets ",(0,t.jsx)(n.code,{children:"GOOGLE_APPLICATION_CREDENTIALS"})," to the path of the JSON key, and client libraries will use it via ADC."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"risks",children:"Risks"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u274c Long\u2011lived credentials can be leaked or compromised."}),"\n",(0,t.jsx)(n.li,{children:"\u274c Key rotation is manual and error\u2011prone."}),"\n",(0,t.jsx)(n.li,{children:"\u274c Harder to revoke quickly compared to role\u2011based access."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"hardening-measures",children:"Hardening Measures"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Attach ",(0,t.jsx)(n.strong,{children:"minimal IAM roles"}),"; avoid broad roles."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.strong,{children:"organization policies"})," and ",(0,t.jsx)(n.strong,{children:"VPC Service Controls"})," where applicable."]}),"\n",(0,t.jsxs)(n.li,{children:["Restrict access to the key file and monitor its usage with ",(0,t.jsx)(n.strong,{children:"Cloud Audit Logs"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Rotate keys frequently (e.g., every 30 - 60 days)."}),"\n",(0,t.jsxs)(n.li,{children:["Store keys in a ",(0,t.jsx)(n.strong,{children:"secrets manager"}),", for example in ",(0,t.jsx)(n.code,{children:"@tooljump/secrets-env"}),". More information ",(0,t.jsx)(n.a,{href:"/docs/writing-integrations/secrets",children:"here"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"example-usage-in-nodejs-json-key",children:"Example: Usage in Node.js (JSON key)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { Storage } from "@google-cloud/storage";\n\n// Ensure process.env.GOOGLE_APPLICATION_CREDENTIALS points to the JSON key\nconst storage = new Storage();\n\nconst [files] = await storage.bucket("my-bucket").getFiles({ prefix: "read-prefix/" });\nconsole.log(files.map(f => f.name));\n'})}),"\n",(0,t.jsx)(n.h2,{id:"using-the-gcp-sdk-to-retrieve-data-from-gcp",children:"Using the GCP SDK to retrieve data from GCP"}),"\n",(0,t.jsxs)(n.p,{children:["To retrieve data from GCP, use the official Google Cloud client libraries (e.g., ",(0,t.jsx)(n.code,{children:"@google-cloud/*"}),") for accessing services like Cloud Storage, BigQuery, and Pub/Sub."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);
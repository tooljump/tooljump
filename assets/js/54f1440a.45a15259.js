"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4838],{9390:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"writing-integrations/caching","title":"Caching","description":"Learn how to implement caching in ToolJump integrations to improve performance, reduce API calls, and optimize data retrieval for better user experience.","source":"@site/docs/writing-integrations/caching.md","sourceDirName":"writing-integrations","slug":"/writing-integrations/caching","permalink":"/docs/writing-integrations/caching","draft":false,"unlisted":false,"editUrl":"https://github.com/tooljump/tooljump/tree/main/docs/docs/writing-integrations/caching.md","tags":[],"version":"current","frontMatter":{"id":"caching","title":"Caching","sidebar_label":"Caching","keywords":["integration caching","data caching","performance optimization","tooljump caching","cache strategy"],"description":"Learn how to implement caching in ToolJump integrations to improve performance, reduce API calls, and optimize data retrieval for better user experience."},"sidebar":"docsSidebar","previous":{"title":"Running code in an integration","permalink":"/docs/writing-integrations/integrations-code-execution"},"next":{"title":"Secrets","permalink":"/docs/writing-integrations/secrets"}}');var c=i(74848),a=i(28453);const r={id:"caching",title:"Caching",sidebar_label:"Caching",keywords:["integration caching","data caching","performance optimization","tooljump caching","cache strategy"],description:"Learn how to implement caching in ToolJump integrations to improve performance, reduce API calls, and optimize data retrieval for better user experience."},o="Caching",s={},h=[{value:"How Caching Works",id:"how-caching-works",level:2},{value:"Cache Configuration",id:"cache-configuration",level:2},{value:"Advanced Caching",id:"advanced-caching",level:2},{value:"Custom Cache Keys",id:"custom-cache-keys",level:3},{value:"Context-Aware Caching",id:"context-aware-caching",level:3},{value:"Debugging Caching",id:"debugging-caching",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"caching",children:"Caching"})}),"\n",(0,c.jsxs)(n.p,{children:["Caching improves performance by storing integration results and avoiding unnecessary re-execution. ToolJump automatically caches your integration results based on the ",(0,c.jsx)(n.code,{children:"cache"})," property in your metadata."]}),"\n",(0,c.jsx)(n.admonition,{type:"note",children:(0,c.jsxs)(n.p,{children:["For where and how result caching is implemented, see ",(0,c.jsx)(n.a,{href:"/docs/server-architecture#caches-results-of-integrations-for-performance-reasons",children:"Server Architecture: caching"}),"."]})}),"\n",(0,c.jsx)(n.admonition,{type:"note",children:(0,c.jsxs)(n.p,{children:["This page describes result caching at the integration level. For caching arbitrary calls within your code, see ",(0,c.jsx)(n.a,{href:"/docs/writing-integrations/integrations-code-execution#cache",children:"Running code in an integration"}),"."]})}),"\n",(0,c.jsx)(n.h2,{id:"how-caching-works",children:"How Caching Works"}),"\n",(0,c.jsxs)(n.p,{children:["When you set a ",(0,c.jsx)(n.code,{children:"cache"})," value in your metadata, ToolJump will:"]}),"\n",(0,c.jsxs)(n.ol,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Store results"})," after the first execution"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Return cached results"})," for subsequent requests within the cache period"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Re-execute"})," the integration when the cache expires"]}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"cache-configuration",children:"Cache Configuration"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"metadata: {\n    name: 'my-integration',\n    cache: 300,  // Cache for 5 minutes (300 seconds)\n    // ... other metadata\n}\n"})}),"\n",(0,c.jsx)(n.h2,{id:"advanced-caching",children:"Advanced Caching"}),"\n",(0,c.jsx)(n.h3,{id:"custom-cache-keys",children:"Custom Cache Keys"}),"\n",(0,c.jsx)(n.p,{children:"You can specify custom cache keys for more granular control:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"metadata: {\n    name: 'user-profile',\n    cache: 3600,\n    match: {\n        contextType: 'github',\n    }\n    cacheKey: ['page.repository', 'page.section.name'],  // Build key from context paths\n    // ... other metadata\n}\n"})}),"\n",(0,c.jsx)(n.h3,{id:"context-aware-caching",children:"Context-Aware Caching"}),"\n",(0,c.jsx)(n.p,{children:"Cache duration can vary based on context:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"run: async function (context, secrets = {}, dataFiles = []) {\n    // Adjust cache based on context\n    let cacheDuration = 300; // Default 5 minutes\n    \n    if (context.page?.repository === 'important-repo') {\n        cacheDuration = 60; // Cache for 1 minute on important repos\n    }\n    \n    // Set cache duration dynamically\n    this.metadata.cache = cacheDuration;\n    \n    // Your integration logic here\n}\n"})}),"\n",(0,c.jsx)(n.h2,{id:"debugging-caching",children:"Debugging Caching"}),"\n",(0,c.jsx)(n.p,{children:"If caching isn't working as expected:"}),"\n",(0,c.jsxs)(n.ol,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Check cache duration:"})," Is it set to 0?"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Verify context:"})," Same context = same cache"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Check timestamps:"})," Add logging to see execution frequency"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Force refresh:"})," Temporarily disable caching or change the context"]}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,c.jsx)(n.p,{children:"Now that you understand caching, learn about:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.a,{href:"/docs/writing-integrations/secrets",children:"Secrets"})})," - Manage sensitive configuration"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.a,{href:"/docs/writing-integrations/data",children:"Data"})})," - Provide external configuration and mappings"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.a,{href:"/docs/writing-integrations/debugging",children:"Debugging"})})," - Diagnose and resolve issues"]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(96540);const c={},a=t.createContext(c);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);
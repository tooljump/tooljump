"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8593],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var t=s(96540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},93307:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"recipes/connecting-to-gitlab","title":"Connecting to GitLab","description":"Connect GitLab repositories, merge requests, and CI/CD pipelines with ToolJump to streamline your GitLab-based development workflow.","source":"@site/docs/recipes/connecting-to-gitlab.md","sourceDirName":"recipes","slug":"/recipes/connecting-to-gitlab","permalink":"/docs/recipes/connecting-to-gitlab","draft":false,"unlisted":false,"editUrl":"https://github.com/tooljump/tooljump/tree/main/docs/docs/recipes/connecting-to-gitlab.md","tags":[],"version":"current","frontMatter":{"id":"connecting-to-gitlab","title":"Connecting to GitLab","keywords":["connecting to gitlab","gitlab integration","source control integration","repository integration","tooljump gitlab"],"description":"Connect GitLab repositories, merge requests, and CI/CD pipelines with ToolJump to streamline your GitLab-based development workflow."},"sidebar":"docsSidebar","previous":{"title":"Connecting to GitHub","permalink":"/docs/recipes/connecting-to-github"},"next":{"title":"Connecting to CircleCI","permalink":"/docs/recipes/connecting-to-circleci"}}');var i=s(74848),o=s(28453);const r={id:"connecting-to-gitlab",title:"Connecting to GitLab",keywords:["connecting to gitlab","gitlab integration","source control integration","repository integration","tooljump gitlab"],description:"Connect GitLab repositories, merge requests, and CI/CD pipelines with ToolJump to streamline your GitLab-based development workflow."},c="Connecting to GitLab",a={},l=[{value:"Correlating other tools with GitLab",id:"correlating-other-tools-with-gitlab",level:2},{value:"Authenticating to GitLab",id:"authenticating-to-gitlab",level:2},{value:"Option 1: Project/Group Access Token (recommended)",id:"option-1-projectgroup-access-token-recommended",level:3},{value:"Benefits",id:"benefits",level:4},{value:"Example: Node.js with <code>@gitbeaker/rest</code>",id:"example-nodejs-with-gitbeakerrest",level:4},{value:"Option 2: Personal Access Token (PAT)",id:"option-2-personal-access-token-pat",level:3},{value:"Risks",id:"risks",level:4},{value:"Hardening Measures",id:"hardening-measures",level:4},{value:"Example: Node.js with PAT",id:"example-nodejs-with-pat",level:4},{value:"Option 3: CI Job Token (when running in GitLab CI)",id:"option-3-ci-job-token-when-running-in-gitlab-ci",level:3},{value:"Using the GitLab API to retrieve data from GitLab",id:"using-the-gitlab-api-to-retrieve-data-from-gitlab",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"connecting-to-gitlab",children:"Connecting to GitLab"})}),"\n",(0,i.jsx)(n.p,{children:"GitLab is a platform for hosting code, collaborating via merge requests and issues, and automating CI/CD."}),"\n",(0,i.jsx)(n.h2,{id:"correlating-other-tools-with-gitlab",children:"Correlating other tools with GitLab"}),"\n",(0,i.jsx)(n.p,{children:"Suggested reading: Best practices for uniformly tagging and correlating resources across your organization."}),"\n",(0,i.jsx)(n.p,{children:"To best leverage GitLab, adopt consistent conventions so other tools can reliably find and relate your groups, projects, issues, and merge requests."}),"\n",(0,i.jsx)(n.p,{children:"Examples:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Project tags"}),": add tags like ",(0,i.jsx)(n.code,{children:"service-webshop"})," and ",(0,i.jsx)(n.code,{children:"team-platform"})," for discoverability."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Labels"}),": use standardized labels such as ",(0,i.jsx)(n.code,{children:"service:webshop"}),", ",(0,i.jsx)(n.code,{children:"priority:high"}),", ",(0,i.jsx)(n.code,{children:"component:checkout"})," across issues and merge requests."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CODEOWNERS + approvals"}),": ensure ownership and approval rules reflect team structure."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Issue/MR templates"}),": capture metadata (service, component, severity) in a structured manner."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Links"}),": reference incident IDs, runbooks, or external system identifiers in descriptions for easy correlation."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"authenticating-to-gitlab",children:"Authenticating to GitLab"}),"\n",(0,i.jsx)(n.p,{children:"Depending on your setup, there are several approaches, each with pros and cons. Choose the one that best fits your scenario:"}),"\n",(0,i.jsx)(n.h3,{id:"option-1-projectgroup-access-token-recommended",children:"Option 1: Project/Group Access Token (recommended)"}),"\n",(0,i.jsx)(n.p,{children:"Use this if:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 You want granular, revocable access scoped to a specific project or group"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.strong,{children:"Project Access Token"})," or ",(0,i.jsx)(n.strong,{children:"Group Access Token"})," with minimal scopes (e.g., ",(0,i.jsx)(n.code,{children:"read_api"}),", ",(0,i.jsx)(n.code,{children:"read_repository"}),"). Use it as a bearer token to call the API. These tokens function like a \u201crobot user\u201d limited to the chosen scope."]}),"\n",(0,i.jsx)(n.h4,{id:"benefits",children:"Benefits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Scoped to a single project or group; easy to revoke."}),"\n",(0,i.jsx)(n.li,{children:"Minimal required scopes (least privilege)."}),"\n",(0,i.jsx)(n.li,{children:"Works for both Git operations and the REST/GraphQL APIs (where supported by scopes)."}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"example-nodejs-with-gitbeakerrest",children:["Example: Node.js with ",(0,i.jsx)(n.code,{children:"@gitbeaker/rest"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { Gitlab } from '@gitbeaker/rest';\n\nconst api = new Gitlab({\n  host: process.env.GITLAB_HOST || 'https://gitlab.com',\n  token: process.env.GITLAB_ACCESS_TOKEN, // project/group access token\n});\n\n// List open issues in a project (namespace/name encoded)\nconst projectId = encodeURIComponent('my-group/my-project');\nconst issues = await api.Issues.all({ projectId, state: 'opened', perPage: 50 });\nconsole.log(issues.map(i => `#${i.iid} ${i.title}`));\n"})}),"\n",(0,i.jsx)(n.h3,{id:"option-2-personal-access-token-pat",children:"Option 2: Personal Access Token (PAT)"}),"\n",(0,i.jsx)(n.p,{children:"Use this if:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 You cannot use a project/group token and need cross\u2011project access with minimal scopes"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.strong,{children:"Personal Access Token"})," with the minimal scopes needed (e.g., ",(0,i.jsx)(n.code,{children:"read_api"}),", ",(0,i.jsx)(n.code,{children:"read_repository"}),", ",(0,i.jsx)(n.code,{children:"read_user"}),"). Store it securely and rotate regularly."]}),"\n",(0,i.jsx)(n.h4,{id:"risks",children:"Risks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u274c Long\u2011lived secrets can be leaked or compromised."}),"\n",(0,i.jsx)(n.li,{children:"\u274c May grant broader access than intended if scoped widely."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"hardening-measures",children:"Hardening Measures"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Limit scopes and set an expiration date."}),"\n",(0,i.jsxs)(n.li,{children:["Store in a ",(0,i.jsx)(n.strong,{children:"secrets manager"}),", for example in ",(0,i.jsx)(n.code,{children:"@tooljump/secrets-env"}),". More information ",(0,i.jsx)(n.a,{href:"/docs/writing-integrations/secrets",children:"here"})]}),"\n",(0,i.jsx)(n.li,{children:"Rotate frequently (e.g., every 30 - 60 days); monitor access logs."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example-nodejs-with-pat",children:"Example: Node.js with PAT"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { Gitlab } from '@gitbeaker/rest';\n\nconst api = new Gitlab({\n  host: process.env.GITLAB_HOST || 'https://gitlab.com',\n  token: process.env.GITLAB_PAT, // personal access token\n});\n\nconst projectId = encodeURIComponent('my-group/my-project');\nconst repoTree = await api.RepositoryTree.all(projectId, { path: 'read-prefix', perPage: 100 });\nconsole.log(repoTree.map(e => e.path));\n"})}),"\n",(0,i.jsx)(n.h3,{id:"option-3-ci-job-token-when-running-in-gitlab-ci",children:"Option 3: CI Job Token (when running in GitLab CI)"}),"\n",(0,i.jsx)(n.p,{children:"Use this if:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 Your code runs inside ",(0,i.jsx)(n.strong,{children:"GitLab CI/CD"})," and can rely on the short\u2011lived ",(0,i.jsx)(n.code,{children:"CI_JOB_TOKEN"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"CI_JOB_TOKEN"})," is injected into jobs and can be used for certain API calls and package/registry operations. Configure the project to trust ",(0,i.jsx)(n.code,{children:"CI_JOB_TOKEN"})," for the necessary endpoints and keep permissions minimal."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { Gitlab } from '@gitbeaker/rest';\n\nconst api = new Gitlab({\n  host: process.env.GITLAB_HOST || 'https://gitlab.com',\n  jobToken: process.env.CI_JOB_TOKEN, // sends JOB-TOKEN header for supported endpoints\n});\n\nconst projectId = encodeURIComponent('my-group/my-project');\nconst pipelines = await api.Pipelines.all(projectId, { perPage: 20 });\nconsole.log(pipelines.map(p => `${p.id}:${p.status}`));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"using-the-gitlab-api-to-retrieve-data-from-gitlab",children:"Using the GitLab API to retrieve data from GitLab"}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.strong,{children:"REST API v4"})," or ",(0,i.jsx)(n.strong,{children:"GraphQL"}),". Prefer pagination and caching where possible."]}),"\n",(0,i.jsx)(n.p,{children:"Best practices:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pagination"}),": Use ",(0,i.jsx)(n.code,{children:"per_page"}),"/",(0,i.jsx)(n.code,{children:"page"})," parameters; the API returns pagination headers."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rate limits/abuse limits"}),": Back off on 429/403 and respect ",(0,i.jsx)(n.code,{children:"RateLimit-*"})," headers."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Minimal scopes"}),": Request only the scopes you need (",(0,i.jsx)(n.code,{children:"read_api"}),", ",(0,i.jsx)(n.code,{children:"read_repository"}),", etc.)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Project IDs"}),": Many endpoints require a numeric project ID; for namespace/name, URL\u2011encode as ",(0,i.jsx)(n.code,{children:"my-group%2Fmy-project"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example: list merge requests via REST (Node.js):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { Gitlab } from '@gitbeaker/rest';\n\nconst api = new Gitlab({ host: 'https://gitlab.com', token: process.env.GITLAB_ACCESS_TOKEN || process.env.GITLAB_PAT });\nconst projectId = encodeURIComponent('my-group/my-project');\nconst mrs = await api.MergeRequests.all({ projectId, state: 'opened', perPage: 20 });\nconsole.log(mrs.map(m => `!${m.iid} ${m.title}`));\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2073],{28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var t=r(96540);const o={},i=t.createContext(o);function s(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},82546:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"server-architecture","title":"Server Architecture","description":"Deep dive into ToolJump\'s server architecture including the integration engine, workflow processing, and how it orchestrates developer tool connections.","source":"@site/docs/server-architecture.md","sourceDirName":".","slug":"/server-architecture","permalink":"/docs/server-architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/tooljump/tooljump/tree/main/docs/docs/server-architecture.md","tags":[],"version":"current","frontMatter":{"id":"server-architecture","title":"Server Architecture","sidebar_label":"(2/2) Server Architecture","keywords":["tooljump server","server architecture","integration engine","developer tool server","self-hosted"],"description":"Deep dive into ToolJump\'s server architecture including the integration engine, workflow processing, and how it orchestrates developer tool connections."},"sidebar":"docsSidebar","previous":{"title":"(1/2) Chrome Extension Architecture","permalink":"/docs/chrome-extension-architecture"},"next":{"title":"Writing Integrations","permalink":"/docs/writing-integrations"}}');var o=r(74848),i=r(28453);const s={id:"server-architecture",title:"Server Architecture",sidebar_label:"(2/2) Server Architecture",keywords:["tooljump server","server architecture","integration engine","developer tool server","self-hosted"],description:"Deep dive into ToolJump's server architecture including the integration engine, workflow processing, and how it orchestrates developer tool connections."},c="ToolJump Server Architecture",a={},l=[{value:"Server responsibilities",id:"server-responsibilities",level:2},{value:"Process the requests from ToolJump Chrome extension",id:"process-the-requests-from-tooljump-chrome-extension",level:3},{value:"Loads all integrations and is responsible for deciding which one runs for a given context",id:"loads-all-integrations-and-is-responsible-for-deciding-which-one-runs-for-a-given-context",level:3},{value:"Runs the integrations in an isolated manner",id:"runs-the-integrations-in-an-isolated-manner",level:3},{value:"Manages secrets required for connecting to external tools from integrations",id:"manages-secrets-required-for-connecting-to-external-tools-from-integrations",level:3},{value:"Caches results of integrations for performance reasons",id:"caches-results-of-integrations-for-performance-reasons",level:3},{value:"Responsible for authentication",id:"responsible-for-authentication",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"tooljump-server-architecture",children:"ToolJump Server Architecture"})}),"\n",(0,o.jsx)(n.p,{children:"The ToolJump Server is the core orchestration engine that processes integration requests, executes workflows, and manages the entire integration ecosystem."}),"\n",(0,o.jsx)(n.p,{children:"The server is responsible with:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"processes the requests from the ToolJump Chrome extension via HTTP"}),"\n",(0,o.jsx)(n.li,{children:"loads all integration and is responsible for deciding which one runs for a given context"}),"\n",(0,o.jsx)(n.li,{children:"runs the integrations in an isolated manner"}),"\n",(0,o.jsx)(n.li,{children:"manages secrets required for connecting to external tools from integrations"}),"\n",(0,o.jsx)(n.li,{children:"caches results of integrations for performance reasons"}),"\n",(0,o.jsx)(n.li,{children:"responsible for authentication"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"As every company runs their services in their own way, the ToolJump server was designed to be extremely flexible and extensible."}),"\n",(0,o.jsxs)(n.p,{children:["If you need help setting up ToolJump in your organisation with the help of the ToolJump authors, you can reach out ",(0,o.jsx)(n.a,{href:"./implement",children:"here"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Next, let's go one by one and explore in detail how it happens:"}),"\n",(0,o.jsx)(n.h2,{id:"server-responsibilities",children:"Server responsibilities"}),"\n",(0,o.jsx)(n.h3,{id:"process-the-requests-from-tooljump-chrome-extension",children:"Process the requests from ToolJump Chrome extension"}),"\n",(0,o.jsx)(n.p,{children:"The server uses the popular Express framework to process a number of endpoints required by the extensions."}),"\n",(0,o.jsxs)(n.p,{children:["The most important one is the ",(0,o.jsx)(n.code,{children:"/context"})," endpoint, which receives the ",(0,o.jsx)(n.a,{href:"./core-concepts",children:"context"})," from the Chrome extension, and returns the links and insights relevant for the current page"]}),"\n",(0,o.jsx)(n.h3,{id:"loads-all-integrations-and-is-responsible-for-deciding-which-one-runs-for-a-given-context",children:"Loads all integrations and is responsible for deciding which one runs for a given context"}),"\n",(0,o.jsx)(n.p,{children:"Integrations are standalone JavaScript files, which can be loaded by the server in two ways:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["locally, as files (if using the ",(0,o.jsx)(n.code,{children:"@tooljump/integration-fs"})," package)"]}),"\n",(0,o.jsxs)(n.li,{children:["from a GitHub repository (if using the ",(0,o.jsx)(n.code,{children:"@tooljump/integration-github"})," packages)"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"To benefit from the advantages of source control (auditing, reviewing, history, etc), we recommend using the GitHub method"})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["If you want to load the integrations from another source (eg: S3, DB, etc), you can create your own integration by inheriting from ",(0,o.jsx)(n.code,{children:"Integrations"})," from ",(0,o.jsx)(n.code,{children:"@tooljump/common"})," package and implementing all the required methods."]})}),"\n",(0,o.jsx)(n.h3,{id:"runs-the-integrations-in-an-isolated-manner",children:"Runs the integrations in an isolated manner"}),"\n",(0,o.jsxs)(n.p,{children:["Integrations are JavaScript files which are ran by the server using the native node ",(0,o.jsx)(n.code,{children:"vm"})," module, as part of the ",(0,o.jsx)(n.code,{children:"@tooljump/runner-vm"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["The native ",(0,o.jsx)(n.code,{children:"VM"})," node module does not offer full isolation, so if you do not store your integrations in Github and use a code review process (just like you should use for the rest of your organisation), an integration can exit outside of its isolation if not reviewed."]})}),"\n",(0,o.jsx)(n.p,{children:"When using the GitHub integration method above, this creates a balance between convenience, functionality and security."}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsx)(n.p,{children:"If for whatever reason you want full isolation from the node process, you have two options:"}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Create a remote runner that just runs the integrations"}),"\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.code,{children:"isolated-vm"})," package, however this reduces your ability to import SDKs or to pass custom modules from the server inside the module"]}),"\n"]})]}),"\n",(0,o.jsx)(n.h3,{id:"manages-secrets-required-for-connecting-to-external-tools-from-integrations",children:"Manages secrets required for connecting to external tools from integrations"}),"\n",(0,o.jsx)(n.p,{children:"Integrations require secrets to be able to connect to external tools."}),"\n",(0,o.jsx)(n.p,{children:"For example, to find out when a given GitHub repo was last released to production, the integration would need to access the CI/CD system."}),"\n",(0,o.jsxs)(n.p,{children:["To store this secrets, ToolJump provides the package ",(0,o.jsx)(n.code,{children:"@tooljump/secrets-env"}),", which reads the secrets from the process' env variables."]}),"\n",(0,o.jsxs)(n.p,{children:["However, you can easily create secrets wrapper by using systems like AWS Secrets Manager, Vault, etc, by inheriting the ",(0,o.jsx)(n.code,{children:"Secrets"})," class from ",(0,o.jsx)(n.code,{children:"@tooljump/common"})," and implementing the ",(0,o.jsx)(n.code,{children:"get"})," and ",(0,o.jsx)(n.code,{children:"load"})," methods."]}),"\n",(0,o.jsx)(n.h3,{id:"caches-results-of-integrations-for-performance-reasons",children:"Caches results of integrations for performance reasons"}),"\n",(0,o.jsx)(n.p,{children:"In order to improve the performance and reduce the load of the server and external tools, ToolJump provides caching functionality."}),"\n",(0,o.jsxs)(n.p,{children:["For this, ToolJump provides the package ",(0,o.jsx)(n.code,{children:"@tooljump/cache-local"}),", which stores the cache locally in a hashmap."]}),"\n",(0,o.jsxs)(n.p,{children:["However, you can easily create cache wrapper for existing cache systems (eg: Redis, Memcached) by inheriting the ",(0,o.jsx)(n.code,{children:"Cache"})," class from ",(0,o.jsx)(n.code,{children:"@tooljump/common"})," and implementing the ",(0,o.jsx)(n.code,{children:"get"}),"/",(0,o.jsx)(n.code,{children:"set"})," methods."]}),"\n",(0,o.jsx)(n.h3,{id:"responsible-for-authentication",children:"Responsible for authentication"}),"\n",(0,o.jsxs)(n.p,{children:["For security reasons, every request must be authenticated. ToolJump provides a simple authentication based on a fixed token with the ",(0,o.jsx)(n.code,{children:"@tooljump/auth-token"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["A more advanced authentication system (eg: Okta, Google Workspaces, emai/password) can be created by extending ",(0,o.jsx)(n.code,{children:"Auth"})," class and by implementing the ",(0,o.jsx)(n.code,{children:"middleware"})," method."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"To ensure an additional layer of security, you can limit the access from the service's firewall/api gateway only to the IPs in your company."})}),"\n",(0,o.jsxs)(n.p,{children:["Understand how to properly secure your deployment in our ",(0,o.jsx)(n.a,{href:"/docs/security",children:"security documentation"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);
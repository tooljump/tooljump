"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[479],{20246:e=>{e.exports=JSON.parse('{"permalink":"/integrations/github-slack-channel","editUrl":"https://github.com/tooljump/tooljump/tree/main/docs/integrations/github.slack.channel.mdx","source":"@site/integrations/github.slack.channel.mdx","title":"GitHub \u2192 Slack: Show service channel","description":"Connect GitHub repositories with Slack channels. Show the associated Slack channel for each repository to improve team communication and collaboration.","date":"2025-10-29T20:29:39.000Z","tags":[{"inline":true,"label":"github","permalink":"/integrations/tags/github"},{"inline":true,"label":"slack","permalink":"/integrations/tags/slack"},{"inline":true,"label":"channel","permalink":"/integrations/tags/channel"}],"readingTime":0.75,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"github-slack-channel","title":"GitHub \u2192 Slack: Show service channel","subtitle":"Link the repository to its Slack channel","tags":["github","slack","channel"],"icons":["github","slack"],"keywords":["github slack integration","slack channel","github slack","team communication","repository slack"],"description":"Connect GitHub repositories with Slack channels. Show the associated Slack channel for each repository to improve team communication and collaboration."},"unlisted":false,"prevItem":{"title":"GitHub \u2192 PagerDuty: Show who\'s on\u2011call","permalink":"/integrations/github-pagerduty-oncall"}}')},41341:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>h,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>d});var t=a(20246),i=a(74848),o=a(28453),s=a(83457),l=a(83220);const c={slug:"github-slack-channel",title:"GitHub \u2192 Slack: Show service channel",subtitle:"Link the repository to its Slack channel",tags:["github","slack","channel"],icons:["github","slack"],keywords:["github slack integration","slack channel","github slack","team communication","repository slack"],description:"Connect GitHub repositories with Slack channels. Show the associated Slack channel for each repository to improve team communication and collaboration."},r=void 0,h={authorsImageUrls:[]},d=[{value:"How does this help you?",id:"how-does-this-help-you",level:2},{value:"High level approach",id:"high-level-approach",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Code",id:"code",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"how-does-this-help-you",children:"How does this help you?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Quickly find the Slack channel associated with this repository"}),"\n",(0,i.jsx)(n.li,{children:"Jump straight into Slack via a deep link"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"high-level-approach",children:"High level approach"}),"\n",(0,i.jsxs)(n.p,{children:["We assume a local data file maps repositories to Slack channels. The integration reads the mapping, finds the channel for the current repo (tag key ",(0,i.jsx)(n.code,{children:"repository"}),", value from the GitHub page), and renders a link to Slack."]}),"\n",(0,i.jsxs)(n.p,{children:["Example data file (",(0,i.jsx)(n.code,{children:"slack-channels.data.json"}),"):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mappings": {\n    "company/webshop": "#webshop",\n    "company/notifier": "#alerts-notifier"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"The prefered way of obtaining this information is if you use a Service/Inventory Catalog solution, which you can read this information from via API access."})}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.p,{children:["No external auth required. Add a data file (e.g., ",(0,i.jsx)(n.code,{children:"slack-channels.data.json"}),") to your data directory. Learn more in ",(0,i.jsx)(n.a,{href:"/docs/writing-integrations/data",children:"Data files"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,i.jsx)(s.A,{language:"javascript",title:"github.slack.channel.integration.example.js",children:l.A})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},83220:(e,n,a)=>{a.d(n,{A:()=>t});const t="module.exports = {\n    metadata: {\n        name: 'github-slack-channel',\n        description: 'Show the Slack channel mapped to this repository via data files',\n        match: {\n            contextType: 'github',\n            context: {\n                'page.repository': { startsWith: 'my-org/' }\n            }\n        },\n        requiredSecrets: [],\n        cache: 300\n    },\n    run: async function (context, secrets = {}, dataFiles = []) {\n        const repo = context.page.repository; // e.g., \"company/webshop\"\n\n        // Expect a data file like slack-channels.data.json with shape:\n        // { \"mappings\": { \"company/webshop\": \"#webshop\" } }\n        const df = dataFiles.find(f => f.id === 'slack-channels');\n        if (!df || !df.data || !df.data.mappings) {\n            return [];\n        }\n\n        let channel = df.data.mappings[repo];\n        if (!channel || typeof channel !== 'string') {\n            return [];\n        }\n\n        // Normalize channel value (accepts \"#name\", \"name\", or channel ID)\n        const normalized = channel.startsWith('#') ? channel.slice(1) : channel;\n\n        // Slack app redirect supports channel by name or ID\n        const slackUrl = `https://slack.com/app_redirect?channel=${encodeURIComponent(normalized)}`;\n\n        return [\n            { type: 'link', content: `#${normalized}`, icon: 'slack', href: slackUrl },\n        ];\n    }\n};\n\n"}}]);